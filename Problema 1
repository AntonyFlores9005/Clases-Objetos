#include <iostream>
#include <windows.h>
#include <string>
#include <cstdlib>

class Empleado {
    public:
    //Atributos
    int ClaveEmpleado;
    std::string Nombre;
    std::string Domicilio;
    float Sueldo;
    std::string ReportaA;
    //Metodos
    Empleado(int CE, std::string N, std::string Dom, float Sld, std::string URA) {
        ClaveEmpleado = CE; Nombre = N; Domicilio = Dom; Sueldo = Sld; ReportaA = URA;
    }
    
    int getClave(){
        return ClaveEmpleado;
    }

    void Imprime(){
        std::cout << "Clave: " << ClaveEmpleado << std::endl;
        std::cout << "Nombre: " << Nombre << std::endl;
        std::cout << "Domicilio: " << Domicilio << std::endl;
        std::cout << "Sueldo: " << Sueldo << std::endl;
        std::cout << "Reporta a: " << ReportaA << std::endl;
    }

    void CambiaDomic(std::string UpdateDomicilio){
        Domicilio = UpdateDomicilio;
    }
    
    void CambiarReportaA(std::string UpdateReportaA){
        ReportaA = UpdateReportaA;        
    }

    void ActualSueldo(float UpdateSueldo){
        Sueldo += Sueldo * (UpdateSueldo / 100.0);
            
    }
};

int main() {
    Empleado JefePersonal(10, "Javairo", "Jalisco 234", 33000.0, "Municipio");
    Empleado JefePlanta(4, "Alfaro", "Andares", 55000.0, "Capital");

    int opcion, ClaveEmpleado;
    do {
        system("cls");
        system("Color F0");
        std::cout << "\n\tMenu:\n";
        std::cout << "\t1. Cambiar domicilio\n";
        std::cout << "\t2. Actualizar sueldo\n";
        std::cout << "\t3. Imprimir datos\n";
        std::cout << "\t4. Cambiar Reportar a:\n";
        std::cout << "\t0. Salir\n";
        std::cout << "\tIngrese su opcion: ";
        std::cin >> opcion;

        switch (opcion) {
            case 1: {
                system("cls");
                std::cout << "Ingrese la clave del empleado: ";
                std::cin >> ClaveEmpleado;
                std::cin.ignore(); 

                std::string UpdateDomicilio;
                std::cout << "Ingrese el nuevo domicilio: ";
                std::getline(std::cin, UpdateDomicilio);

                if (ClaveEmpleado == JefePlanta.getClave()) {
                    JefePlanta.CambiaDomic(UpdateDomicilio);
                } else if (ClaveEmpleado == JefePersonal.getClave()) {
                    JefePersonal.CambiaDomic(UpdateDomicilio);
                } else {
                    std::cout << "Clave de empleado erronea o no existente.\n";
                }
                break;
            }
            case 2: {
                system("cls");
                std::cout << "Ingrese la clave del empleado: ";
                std::cin >> ClaveEmpleado;

                float UpdateSueldo;
                std::cout << "Ingrese el porcentaje de incremento: ";
                std::cin >> UpdateSueldo;

                if (ClaveEmpleado == JefePlanta.getClave()) {
                    JefePlanta.ActualSueldo(UpdateSueldo);
                } else if (ClaveEmpleado == JefePersonal.getClave()) {
                    JefePersonal.ActualSueldo(UpdateSueldo);
                } else {
                    std::cout << "Clave de empleado erronea o no existente.\n";
                }
                break;
            }
            case 3: {
                system("cls");
                std::cout << "Ingrese la clave del empleado: ";
                std::cin >> ClaveEmpleado;

                if (ClaveEmpleado == JefePlanta.getClave()) {
                    JefePlanta.Imprime();
                    system("pause");
                } else if (ClaveEmpleado == JefePersonal.getClave()) {
                    JefePersonal.Imprime();
                    system("pause");
                } else {
                    std::cout << "Clave de empleado erronea o no existente.\n";
                }
                break;
            }
            case 4: {
                system("cls");
                std::cout << "Ingrese la clave del empleado: ";
                std::cin >> ClaveEmpleado;
                std::cin.ignore(); 

                std::string UpdateReportaA;
                std::cout << "Ingrese el nombre a quien reportaras: ";
                std::getline(std::cin, UpdateReportaA);

                if (ClaveEmpleado == JefePlanta.getClave()) {
                    JefePlanta.CambiarReportaA(UpdateReportaA);
                } else if (ClaveEmpleado == JefePersonal.getClave()) {
                    JefePersonal.CambiarReportaA(UpdateReportaA);
                } else {
                    std::cout << "Clave de empleado erronea o no existente.\n";
                }
                break;
            }
            case 0:
                std::cout << "Saliendo\n";
                break;
            default:
                system("cls");
                std::cout << "Opcion erronea o no existente.\n";
                system("Color 4F");
                Sleep(2500);
        }

    } while (opcion != 0);

    return 0;
}
